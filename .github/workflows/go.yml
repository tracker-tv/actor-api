name: Go

on:
  merge_group:
    types:
      - checks_requested
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: false
      - name: Golang CI Lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.61
          args: --timeout=10m --issues-exit-code=0
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: Run test
        id: test
        run: docker compose run --rm test
  build:
    name: Build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/prod'
    needs: [test]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup variables
        id: vars
        run: |
          echo "VERSION=$(date +"%Y_%m_%d")_$(echo ${{ github.head_ref }} | sed 's:.*/::')_$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "DOCKER_IMAGE=${{ env.REGISTRY }}/${{ github.repository }}" >> $GITHUB_OUTPUT
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
      - name: Build and push application
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.vars.outputs.DOCKER_IMAGE }}:${{ steps.vars.outputs.VERSION }}
      - name: Build and push db-migration
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.db-migration
          push: true
          tags: ${{ steps.vars.outputs.DOCKER_IMAGE }}/db-migration:${{ steps.vars.outputs.VERSION }}

